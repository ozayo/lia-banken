---
description: 
globs: 
alwaysApply: true
---
**Description:** This rule outlines the use of Supabase as the backend for authentication, database, storage, and real-time features. It standardizes how to interact with Supabase using `@supabase/supabase-js` in both Server and Client Components.

```
# Supabase Integration Guidelines

## Connection & Setup

- Supabase is connected via a Managed Connection Provider (MCP) defined in `.cursor/mcp.json`.
- Cursor will use this connection to introspect database schema and resolve queries automatically.

- Use `@supabase/supabase-js` client for all interactions.
- Environment variables must be set via `.env.local`:
  - `NEXT_PUBLIC_SUPABASE_URL`
  - `NEXT_PUBLIC_SUPABASE_ANON_KEY`
- Auth:
  - Use Supabase email/password auth with email verification.
  - Use `auth.onAuthStateChange()` for session handling on the client.
- Realtime:
  - Use Supabase Realtime for student placement status and notifications if needed.
- Storage:
  - Use Supabase Storage for CV uploads (PDF).
- Data fetching:
  - Prefer Server Components for loading dashboard data via Supabase queries.
  - Use `cookies().get("supabase-auth-token")` on the server to access session if needed.
- Row Level Security (RLS) must be defined for all protected tables.
```
